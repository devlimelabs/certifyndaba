rules_version = "2";
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth.token.role == 'admin';
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isCompanyUser() {
      return request.auth.token.companyID == resource.data.companyID;
    }

    function isConnectedCompanyUser() {
      return request.auth.token.companyID in resource.data.connectedCompanies;
    }

    function isRequestCandidate() {
      return request.auth.uid == resource.data.candidateID;
    }

    function isInDocumentGroup() {
      return request.auth.token.accountType in resource.data.groups;
    }

    function isUser() {
      return request.auth.uid == resource.data.id;
    }

    function isUserDoc(userId) {
      return request.auth.uid == userId;
    }

    function isCandidateOrCompanyUser() {
      return request.auth.uid == resource.data.candidateID || request.auth.token.companyID == resource.data.companyID;
    }

    match /app-nav-links/{appNavLink} {
      allow read: if isSignedIn() && isInDocumentGroup();
    }

    match /nav-links/{navLink} {
      allow read: if true;
    }

    match /users/{userId} {
      allow get: if isUserDoc(userId) || isAdmin() || isConnectedCompanyUser();
      allow list: if isAdmin();
      allow update: if isAdmin() || isUserDoc(userId) && (!request.resource.data.diff(resource.data).affectedKeys().hasAny(['status','connectedCompanies']));
    }

    match /companies/{companyId} {
      allow read: if isSignedIn();
      allow write: if request.auth.token.companyID == companyId;

      match /requests/{requestId} {
        allow read: if isCompanyUser() || isRequestCandidate() || request.auth.token.companyID == companyId;
        allow write: if request.auth.token.companyID == companyId || isCompanyUser() || (isRequestCandidate() && (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status'])));
      }

      match /users/{user} {
        allow read: if isUser() || isAdmin();
        allow write: if isUser() || isAdmin();
      }
    }

    match /profile-input-groups/{inputGroupId} {
      allow read: if isSignedIn();
    }

    match /{path=**}/requests/{requestId} {
      allow list: if isCandidateOrCompanyUser();
      allow get: if isCandidateOrCompanyUser();
    }

  }
}
